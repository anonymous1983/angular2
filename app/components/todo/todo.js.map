{"version":3,"sources":["components/todo/todo.ts"],"names":["Todo","Todo.constructor","Todo.buildForm","Todo.removeTodo","Todo.onSubmit","Todo.toggleAll"],"mappings":"AAAA,uCAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;YAOvC;gBAeIA,cAAYA,EAAeA;oBACvBC,IAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA;oBACbA,IAAIA,CAACA,KAAKA,GAAGA,IAAIA,KAAKA,EAAYA,CAACA;oBACnCA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,iBAAQA,CAACA,aAAaA,EAAEA,KAAKA,CAACA,CAACA,CAACA;oBAEpDA,IAAIA,CAACA,SAASA,EAAEA,CAACA;gBACrBA,CAACA;gBAEDD,wBAASA,GAATA;oBACIE,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,gBAAOA,CAACA,EAAEA,EAAEA,mBAAUA,CAACA,QAAQA,CAACA,CAACA;oBAEpDA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,EAAEA,CAACA,KAAKA,CAACA;wBACxBA,SAASA,EAAEA,IAAIA,CAACA,OAAOA;qBAC1BA,CAACA,CAACA;gBACPA,CAACA;gBAEDF,yBAAUA,GAAVA,UAAWA,IAAcA;oBACrBG,IAAIA,CAACA,KAAKA,CAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBACnDA,CAACA;gBAEDH,uBAAQA,GAARA;oBACII,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA,CAACA;wBACpBA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,iBAAQA,CAACA,IAAIA,CAACA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,CAACA,CAACA;wBAEzDA,yEAAyEA;wBACzEA,gEAAgEA;wBAChEA,IAAIA,CAACA,SAASA,EAAEA,CAACA;oBACrBA,CAACA;gBACLA,CAACA;gBAEDJ,wBAASA,GAATA,UAAUA,MAAMA;oBACZK,IAAIA,UAAUA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,CAACA;oBACvCA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,UAASA,IAAIA;wBAC5B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;oBAChC,CAAC,CAACA,CAACA;gBACPA,CAACA;gBAlDLL;oBAACA,gBAASA,CAACA;wBACPA,QAAQA,EAAEA,MAAMA;wBAChBA,aAAaA,EAAEA,CAACA,oBAAWA,CAACA;qBAC/BA,CAACA;oBACDA,WAAIA,CAACA;wBACFA,WAAWA,EAAEA,iCAAiCA;wBAC9CA,UAAUA,EAAEA,CAACA,wBAAeA,CAACA;qBAChCA,CAACA;;yBA4CDA;gBAADA,WAACA;YAADA,CAnDA,AAmDCA,IAAA;YAnDD,uBAmDC,CAAA","file":"components/todo/todo.js","sourcesContent":["/// <reference path=\"../../models.ts\"/>\r\n\r\nimport {Component, View} from 'angular2/core';\r\nimport {FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl} from 'angular2/common';\r\nimport {Validators} from 'angular2/common';\r\nimport {TodoItem} from '../../models';\r\n\r\n@Component({\r\n    selector: 'todo',\r\n    viewProviders: [FormBuilder]\r\n})\r\n@View({\r\n    templateUrl: './app/components/todo/todo.html',\r\n    directives: [FORM_DIRECTIVES]\r\n})\r\nexport class Todo {\r\n    todos: Array<TodoItem>;\r\n\r\n    fb: FormBuilder;\r\n    myForm: ControlGroup;\r\n    newTodo: Control;\r\n\r\n    constructor(fb: FormBuilder) {\r\n        this.fb = fb;\r\n        this.todos = new Array<TodoItem>();\r\n        this.todos.push(new TodoItem('Hello world', false));\r\n\r\n        this.buildForm();\r\n    }\r\n\r\n    buildForm(): void {\r\n        this.newTodo = new Control('', Validators.required);\r\n\r\n        this.myForm = this.fb.group({\r\n            'newTodo': this.newTodo\r\n        });\r\n    }\r\n\r\n    removeTodo(item: TodoItem) {\r\n        this.todos.splice(this.todos.indexOf(item), 1);\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (this.myForm.valid) {\r\n            this.todos.push(new TodoItem(this.newTodo.value, false));\r\n\r\n            // How in hell do I reset this thing and prevent it from being validated?\r\n            // The only thing that works is rebuilding the whole form/&%Â¤#\"\"\r\n            this.buildForm();\r\n        }\r\n    }\r\n\r\n    toggleAll($event) {\r\n        var isComplete = $event.target.checked;\r\n        this.todos.forEach(function(todo) {\r\n            todo.completed = isComplete;\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}