{"version":3,"sources":["common/util/util.ts"],"names":["Util","Util.constructor","Util.getInstance","Util.Path","Util.Rest","Util.RequestOptions","Rewriter","Rewriter.constructor","Rewriter.setPath","Rewriter.build","Path","Path.constructor","Rest","Rest.constructor","RequestOptions","RequestOptions.constructor","RequestOptions.setSearchParams"],"mappings":"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","file":"common/util/util.js","sourcesContent":["import {Injectable} from 'angular2/core';\r\nimport {URLSearchParams} from 'angular2/http';\r\nimport {isPresent, isJsObject, Json } from 'angular2/src/facade/lang';\r\n\r\nimport {AtexoConstant} from '../constant/atexo.constant';\r\n\r\n\r\n@Injectable()\r\nexport class Util {\r\n    static instance:Util;\r\n    static isCreating:Boolean = false;\r\n\r\n    constructor() {\r\n        if (!Util.isCreating) {\r\n            throw new Error('[Util] You can\\'t call new in Singleton instances!');\r\n        }\r\n    }\r\n\r\n    static getInstance() {\r\n        if (Util.instance == null) {\r\n            Util.isCreating = true;\r\n            Util.instance = new Util();\r\n            Util.isCreating = false;\r\n        }\r\n        return Util.instance;\r\n    }\r\n\r\n    Path() {\r\n        return new Path();\r\n    }\r\n\r\n    Rest() {\r\n        return new Rest();\r\n    }\r\n\r\n    RequestOptions() {\r\n        return new RequestOptions();\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Rewriter {\r\n    base:string = '';\r\n    uri:string = '';\r\n\r\n    constructor(base:string, uri?:string) {\r\n        uri = isPresent(uri) ? uri : '';\r\n        this.base = base;\r\n        this.uri = uri;\r\n    }\r\n\r\n    setPath(uri:string):Rewriter {\r\n        this.uri = uri;\r\n        return this;\r\n    }\r\n\r\n    build():string {\r\n        return this.base + this.uri;\r\n\r\n    }\r\n}\r\n\r\nclass Path extends Rewriter {\r\n    constructor(path?:string) {\r\n        path = isPresent(path) ? path : '';\r\n        super(AtexoConstant.path.base, path);\r\n    }\r\n}\r\n\r\nclass Rest extends Rewriter {\r\n    constructor(url?:string) {\r\n        url = isPresent(url) ? url : '';\r\n        super(AtexoConstant.rest.baseUrl, url);\r\n    }\r\n}\r\n\r\nclass RequestOptions {\r\n\r\n    searchParams:URLSearchParams;\r\n\r\n    constructor() {\r\n        this.searchParams = new URLSearchParams();\r\n    }\r\n\r\n    setSearchParams(data?:Object):URLSearchParams {\r\n        if (!isPresent(data)) {\r\n            return;\r\n        } else {\r\n            if (isJsObject(data)) {\r\n                for (var item in data) {\r\n                    if (data.hasOwnProperty(item)) {\r\n                        this.searchParams.set(item, data[item]);\r\n                    }\r\n                }\r\n            }\r\n            return this.searchParams;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}