{"version":3,"sources":["advert/advert.ts"],"names":["Advert","Advert.constructor","Advert.updateStatus","Advert.getAdverts","Advert.nextPage","Param","Param.constructor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAgBIA,oCAAoCA;gBAGpCA,gBAAYA,aAA2BA;oBAVvCC,6BAA6BA;oBAC7BA,YAAOA,GAAYA,EAAEA,CAACA;oBACtBA,gBAAWA,GAAUA,CAACA,CAACA;oBACvBA,WAAMA,GAAUA,CAACA,CAACA;oBAClBA,UAAKA,GAAUA,CAACA,CAACA;oBAEjBA,eAAUA,GAAWA,KAAKA,CAACA;oBAKvBA,IAAIA,CAACA,aAAaA,GAAGA,aAAaA,CAACA;oBACnCA,IAAIA,CAACA,UAAUA,EAAEA,CAACA;gBACtBA,CAACA;gBAEDD,6BAAYA,GAAZA,UAAaA,IAAeA;oBACxBE,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA;gBAEDF,2BAAUA,GAAVA;oBAAAG,iBAmBCA;oBAlBGA,IAAIA,KAAKA,GAAGA;wBACRA,KAAKA,EAAEA,IAAIA,CAACA,KAAKA;wBACjBA,MAAMA,EAAEA,IAAIA,CAACA,MAAMA;qBACtBA,CAACA;oBACFA,mBAAQA,CAACA,WAAWA,EAAEA,CAACA,oBAAoBA,EAAEA,CAACA;oBAC9CA,IAAIA,CAACA,aAAaA,CAACA,UAAUA,CAACA,KAAKA,CAACA,CAACA,SAASA,CAACA,UAACA,GAAYA;wBAExDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,MAAMA,KAAKA,GAAGA,CAACA,CAACA,CAACA;4BACrBA,KAAIA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;4BACxBA,GAAGA,CAACA,IAAIA,EAAEA,CAACA,OAAOA,CAACA,UAACA,GAAGA;gCACnBA,KAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;4BAC3BA,CAACA,CAACA,CAACA;4BACHA,mBAAQA,CAACA,WAAWA,EAAEA,CAACA,oBAAoBA,EAAEA,CAACA;wBAClDA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACJA,KAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;wBAC3BA,CAACA;oBAELA,CAACA,CAACA,CAACA;gBACPA,CAACA;gBAEDH,yBAAQA,GAARA;oBACII,IAAIA,CAACA,MAAMA,IAAIA,IAAIA,CAACA,KAAKA,CAACA;oBAC1BA,IAAIA,CAACA,UAAUA,EAAEA,CAACA;oBAClBA,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA;gBArDLJ;oBAACA,gBAASA,CAACA;wBACPA,QAAQA,EAAEA,QAAQA;wBAClBA,SAASA,EAAEA,CAACA,6BAAaA,CAACA;qBAC7BA,CAACA;oBACDA,WAAIA,CAACA;wBACFA,WAAWA,EAAEA,+BAA+BA;qBAC/CA,CAACA;;2BAgDDA;gBAADA,aAACA;YAADA,CAtDA,AAsDCA,IAAA;YAtDD,2BAsDC,CAAA;YAED;gBAIIK,eAAYA,KAAaA,EAAEA,MAAcA;oBAHzCC,UAAKA,GAAUA,CAACA,CAACA;oBACjBA,WAAMA,GAAUA,CAACA,CAACA;oBAGdA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;oBACnBA,IAAIA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;gBACzBA,CAACA;gBACLD,YAACA;YAADA,CARA,AAQCA,IAAA","file":"advert/advert.js","sourcesContent":["import {Component, View, Inject} from 'angular2/core';\r\nimport {FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl, Validators} from 'angular2/common';\r\nimport {AtexoConstant} from '../common/constant/atexo.constant';\r\nimport {Util} from '../common/util/util';\r\nimport {Progress} from '../progress';\r\n\r\nimport {AdvertItem} from './advertEntity';\r\nimport {AdvertService} from './advertService';\r\nimport {HTTP_PROVIDERS, Http, RequestOptions, Request, RequestMethod} from 'angular2/http';\r\nimport {Response} from 'angular2/http';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'advert',\r\n    providers: [AdvertService]\r\n})\r\n@View({\r\n    templateUrl: './app/advert/advert-list.html'\r\n})\r\n\r\nexport class Advert {\r\n    //adverts: Array<AdvertItem>;\r\n    adverts:Object[] = [];\r\n    currentPage:number = 0;\r\n    offset:number = 0;\r\n    limit:number = 5;\r\n    advertService:AdvertService;\r\n    endContent:boolean = false;\r\n    //progress = Progress.getInstance();\r\n\r\n\r\n    constructor(advertService:AdvertService) {\r\n        this.advertService = advertService;\r\n        this.getAdverts();\r\n    }\r\n\r\n    updateStatus(item:AdvertItem) {\r\n        return true;\r\n    }\r\n\r\n    getAdverts() {\r\n        var param = {\r\n            limit: this.limit,\r\n            offset: this.offset\r\n        };\r\n        Progress.getInstance().incrementNbrProgress();\r\n        this.advertService.getAdverts(param).subscribe((res:Response) => {\r\n\r\n            if (res.status === 200) {\r\n                this.endContent = false;\r\n                res.json().forEach((obj) => {\r\n                    this.adverts.push(obj);\r\n                });\r\n                Progress.getInstance().decrementNbrProgress();\r\n            } else {\r\n                this.endContent = true;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    nextPage() {\r\n        this.offset += this.limit;\r\n        this.getAdverts();\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Param {\r\n    limit:number = 2;\r\n    offset:number = 2;\r\n\r\n    constructor(limit?:number, offset?:number) {\r\n        this.limit = limit;\r\n        this.offset = offset;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}